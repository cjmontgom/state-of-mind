type Mood = 1 | 2 | 3 | 4 | 5 | 6 | 7

enum Feeling {
    Stressed = "STRESSED",
    Depressed = "DEPRESSED",
    Optimistic = "OPTIMISTIC",
    Bored = "BORED",
    Happy = "HAPPY",
    Content = "CONTENT"
}

type UserCheckIn = {
    mood: Mood;
    feeling: Feeling;
    comment?: String;
}

type ResponseFromStore = {
    responseText: string;
    allUserCheckIns?: UserCheckIn[];
    errorMessage?: string;
}

interface IInMemoryStore {
    create(userCheckIn: UserCheckIn): Promise<ResponseFromStore>
    read(): Promise<ResponseFromStore>
}

export class InMemoryStore implements IInMemoryStore {

    constructor(private userCheckIns: UserCheckIn[] = []) {
        this.userCheckIns = userCheckIns;
    }

    create = async (userCheckIn: UserCheckIn): Promise<ResponseFromStore> => {
        this.userCheckIns.push(userCheckIn) ;
        return {
            responseText: "Successfully stored check in."
        };
    };

    read = async (): Promise<ResponseFromStore> => {
        return {
            responseText: 'Successfully fetched check ins.',
            allUserCheckIns: this.userCheckIns
        };
    };
}